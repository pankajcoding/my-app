{"version":3,"sources":["logo.svg","components/layout/Header.js","components/subscriber/SubscriberItem.js","components/subscriber/Subscribers.js","components/subscriber/AddSubscriber.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","headerStyle","background","color","textAlign","padding","marginBottom","Header","react_default","a","createElement","style","SubscriberItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","inherits","createClass","key","value","_this$props$sub","props","sub","id","name","phone","Fragment","className","wrapStyle","onClick","delSub","bind","btnStyle","Component","border","cursor","float","position","top","marginLeft","marginTop","Subscribers","subs","map","subscriber_SubscriberItem","AddSubscriber","state","handleChange","e","setState","defineProperty","target","console","log","handleSubmit","preventDefault","addSub","history","push","Link","linkStyle","to","onSubmit","type","onChange","subheadingStyle","submitbtnStyle","textDecoration","display","width","fontSize","fontWeight","withRouter","App","toConsumableArray","filter","index","_this2","BrowserRouter","layout_Header","Route","exact","path","render","class","subscriber_Subscribers","subscriber_AddSubscriber","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c22797c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n      <h3>PHONE DIRECTORY</h3>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: '#000',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px',\n  marginBottom:'20px'\n}\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SubscriberItem extends Component {\n  getStyle = () => {\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted'\n    }\n  }\n\n  render() {\n    const { id, name,phone } = this.props.sub;\n    return (\n                <React.Fragment>\n                <div className=\"row\" style={wrapStyle}>\n                  <div  className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-4\">\n                         { name }\n                    </div>\n                     <div className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-4\">\n                        {phone}\n                         \n                    </div>\n                    <div className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-4\">\n                      \n                         <button onClick={this.props.delSub.bind(this, id)} style={btnStyle}>DELETE</button>\n                    </div>\n                    </div>\n                  </React.Fragment>\n  \n    )\n  }\n}\n\n// PropTypes\nSubscriberItem.propTypes = {\n  subs: PropTypes.object.isRequired,\n  delSub: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n  background: '#F18594',\n  color: 'rgb(16, 16, 16)',\n  border: 'none',\n  padding: '9px 14px',\n  cursor: 'pointer',\n  float: 'left',\n  position: 'relative',\n  top: '-8px',\n  marginLeft:'30%'\n}\nconst wrapStyle = {\n  marginBottom:'10px',\n  marginTop:'10px'\n}\n\nexport default SubscriberItem","\nimport React, { Component } from 'react';\nimport SubscriberItem from './SubscriberItem';\nimport PropTypes from 'prop-types';\n\nclass Subscribers extends Component {\n  render() {\n    return this.props.subs.map((sub) => (\n      <SubscriberItem key={sub.id} sub={sub}  delSub={this.props.delSub}/>\n    ));\n  }\n}\n\n// PropTypes\nSubscribers.propTypes = {\n  subscribers: PropTypes.array.isRequired,\n  delSub: PropTypes.func.isRequired\n \n}\n\nexport default Subscribers;","import React, { Component } from 'react';\nimport { Link,withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass AddSubscriber extends Component {\n    state = {\n        name: '',\n        phone:''\n        \n    };\n  handleChange = (e)=>{\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(e.target)\n  }\n\n  handleSubmit= (e) => {\n    e.preventDefault();\n    this.props.addSub({name:this.state.name,phone:this.state.phone});\n    this.setState({ name: '',phone:'' });\n    this.props.history.push('/');\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n       <Link style={linkStyle} to=\"/\">BACK</Link> \n         <div className=\"row\" >\n                  <div  className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-6\">\n                         \n                             <form onSubmit={this.handleSubmit}>\n                             <fieldset>\n                                <label>\n                                  Name:\n                                  </label>\n                                  <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                                \n                              </fieldset>\n                              <fieldset>\n                                  <label>\n                                  Phone:\n                                   </label>\n                                  <input type=\"text\" name=\"phone\" value={this.state.phone} onChange={this.handleChange} />\n                               \n                              </fieldset>\n                              <p style={subheadingStyle}>Subscriber to be added:</p>\n                                \n                              <p> <span >Name:</span> {this.state.name} <br/>\n                              <span>Phone:</span>  {this.state.phone}\n                              </p> \n                              <p> </p>\n                              <input style={submitbtnStyle} type=\"submit\" value=\"Submit\" />\n                              </form>\n                    </div>\n          </div>\n  \n      </React.Fragment>\n    );\n  }\n}\n\n// PropTypes\nAddSubscriber.propTypes = {\n   addSub: PropTypes.func.isRequired\n}\n\nconst linkStyle = {\n  color: '#000',\n  textDecoration: 'none',\n  padding:'10px 30px',\n  display: 'block',\n  width: '50px',\n  textAlign: 'center',\n  marginLeft: '40px',\n  marginBottom: '20px'\n}\n\nconst subheadingStyle={\n  color:'#44607b',\n  fontSize:'1.2em',\n  fontWeight:'500',\n  marginBottom:'0px'\n  \n}\nconst submitbtnStyle = {\n  color: '#fff',\n  background:'#72BA6F',\n  textDecoration: 'none',\n  padding:'12px 19px',\n  display: 'block',\n  width: '110px',\n  textAlign: 'center',\n  marginLeft: '0px',\n  marginBottom: '30px',\n  border:'0',\n  cursor:'pointer'\n}\n\nexport default withRouter(AddSubscriber);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route,Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport Subscribers from  './components/subscriber/Subscribers';\nimport AddSubscriber from  './components/subscriber/AddSubscriber';\n\n\nclass App extends Component {\n  \n  state={\n    subs:[]\n  }\n  \n  delSub = (id) => {\n    this.setState({subs:[...this.state.subs.filter(sub=>sub.id!=id)]})\n  }\n  \n  addSub=(sub)=>{\n    this.sub=sub;\n    const index=this.state.subs.length+1;\n    this.sub.id=index;\n    console.log('sub',this.sub)\n    this.setState({\n      subs:[...this.state.subs,this.sub]\n    })\n    console.log(this.state.subs)\n  }\n  \n  render() {\n    return (\n      <Router>\n       <div className=\"App\">\n          <div className=\"appcontainer\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <Link style={linkStyle} to=\"/add\">ADD</Link>\n                <div class=\"row\">\n                    <div  className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-4 tableHeader\">\n                        Name\n                    </div>\n                     <div  className=\"col-xs-12\n                                col-sm-12\n                                col-md-6\n                                col-lg-4 tableHeader\">\n                        Phone\n                    </div>\n               </div>\n                <Subscribers subs={this.state.subs} delSub={this.delSub}/>\n              </React.Fragment>\n            )} />\n            \n            <Route  path=\"/add\" render={props => (\n              <React.Fragment>\n                  <AddSubscriber  addSub={this.addSub}/>\n              </React.Fragment>\n            )} />\n          </div>  \n        </div>\n      \n      </Router>\n    );\n  }\n}\n\nconst linkStyle = {\n  color: '#fff',\n  background:'#72BA6F',\n  textDecoration: 'none',\n  padding:'10px 30px',\n  display: 'block',\n  width: '50px',\n  textAlign: 'center',\n  marginLeft: '40px',\n  marginBottom: '30px'\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './grid.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}